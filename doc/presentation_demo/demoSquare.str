
/* Generate Numbers */
void->float filter Generator {
	float i;
	init {
		i = 0;
	}
	work push 1 {
		push(i++);
	}
}

int->float filter Power(float exp) {
	init {}
	work pop 1 push 1 {
		push(pow(pop(), exp));
	}
}

/* Print Results */
int->void filter Printer {
	init {}
	work pop 1 {
		println(pop());
	}
}

/* --------------------------------------------------- */

void->void pipeline demoSquare{
	add Generator;
	/* Give splitjoin parameter */
	add SplitJoin_Square(2);
	add Printer;
}

/* --------------------------------------------------- */

int->float splitjoin SplitJoin_Square(float exp){
	split duplicate;
	add Power(exp);
	add Power(exp);
	join roundrobin(1, 1);
}
